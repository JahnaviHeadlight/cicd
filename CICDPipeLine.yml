AWSTemplateFormatVersion: "2010-09-09"
Description: Automate provisioning of CodeBuild with CodePipeline CodeCommit and CodeDeploy. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template.
Parameters:
  RepoUrl:
    Type: String
    Description: "Please enter repository URL"
  GitHubOAuthToken:
    Type: String
    Description: "Please enter the OAuth Token"
  RepositoryName:
    Type: String
    Description: "Please enter the Repositoty name"
  GitHubOwner:
    Type: String
    Description: "Please provide the owner name"

Resources:
  CodeFlormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  CodeBuildTestProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Artifacts:
        Type: no_artifacts
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:8.11.0
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}CodeBuildKonsultantProfile
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: GITHUB
        Location: !Ref RepoUrl
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      AccessControl: BucketOwnerFullControl
  CodeBuildSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint:
          Ref: EmailAddress
        Protocol: email
  CodePipeLineEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Event Rule"
      EventPattern:
        source:
        - aws.codepipeline
        detail-type:
        - CodePipeline Pipeline Execution State Change
        detail:
          state:
          - FAILED
      State: "ENABLED"
      Targets:
        - 
          Arn:
            Ref: !CodeBuildSNSTopic
          Id: "Ops Topic"
          InputTransformer:
            InputTemplate: '"Pipeline has failed"'
            InputPathsMap:
              pipeline: "$.detail.pipeline"                   
  CodePipelineStack:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
          - Name: Source
            ActionTypeId:    
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            OutputArtifacts:
            - Name: MyApp
            Configuration:
              Owner: !Ref GitHubOwner
              Repo: !Ref RepositoryName
              Branch: master
              OAuthToken: !Ref GitHubOAuthToken
            RunOrder: 1
          - Name: Test
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            OutputArtifacts:
            -  Name: TestArtifacts
            Configuration:
              Owner: !Ref GitHubOwner
              Branch: master
              Repo: !Ref RepositoryName
              OAuthToken: !Ref GitHubOAuthToken
            RunOrder: 1
        - Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
            OutputArtifacts:
              - Name: MyAppBuild
            InputArtifacts:
              - Name: MyApp
            Configuration:
                ProjectName: !Ref CodeBuildTestProject
            RunOrder: 1
        - Name: Staging
          Actions:
          - Name: Staging
            ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
            OutputArtifacts:
              - Name: CreatedTestCFNStack
            Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities:  CAPABILITY_NAMED_IAM
                RoleArn: Fn::GetAtt:: [ CodeFlormationServiceRole, Arn ]
                StackName:
                  Fn::Sub: Test-${AWS::StackName}
                TemplatePath: CFNTemplateArtifact::master-stack.json
            RunOrder: 2





